# hw definition file for processing by chibios_hwdef.py
# for Modal AI FC v2

# MCU class and specific type. It is an STM32H753
MCU STM32H7xx STM32H743xx # STM32H753 and H743 are the same processor, but the 753 has a hardware encryption module


# crystal frequency
OSCILLATOR_HZ 16000000

# board ID for firmware load
APJ_BOARD_ID 50000 # I made this up...

# ChibiOS system timer (default is tim5, but that conflicts with PWM on this board)
STM32_ST_USE_TIMER 2

# default to all pins low to avoid ESD issues
DEFAULTGPIO OUTPUT LOW PULLDOWN

# reserve first sector for bootloader
FLASH_RESERVE_START_KB 128

# flash size
FLASH_SIZE_KB 2048

env OPTIMIZE -O2

STDOUT_SERIAL SD3
STDOUT_BAUDRATE 115200

# order of UARTs (and USB)
SERIAL_ORDER OTG1 UART7 UART5 USART1 USART6 USART3

# now we define the pins that USB is connected on (checked against pin diagram)
PA11 OTG_FS_DM OTG1
PA12 OTG_FS_DP OTG1
PA9 VBUS INPUT

# these are the pins for SWD debugging with a STlinkv2 or black-magic probe (checked against pin diagram)
PA13 JTMS-SWDIO SWD
PA14 JTCK-SWCLK SWD

# SPI1 - imu1 ICM42688 (checked against pin diagram)
PA5 SPI1_SCK SPI1
PG9 SPI1_MISO SPI1
PB5 SPI1_MOSI SPI1

# SPI2 - imu2 ICM42688
PI1 SPI2_SCK SPI2
PI2 SPI2_MISO SPI2
PI3 SPI2_MOSI SPI2

# SPI5 - FRAM (checked against pin diagram)
PF7 SPI5_SCK SPI5
PH7 SPI5_MISO SPI5
PF11  SPI5_MOSI SPI5

# SPI6 - aviator expansion
PB3 SPI6_SCK SPI6
PA6 SPI6_MISO SPI6
PG14 SPI6_MOSI SPI6


# sensor CS, checked against px4 config
PI9  ICM42688_A_CS CS
PH5  ICM42688_B_CS CS
PI10 AVIAATOR_CS CS # aviator expansion
PG7  FRAM_CS CS SPEED_VERYLOW # good


# fsync pins
PE9 IMU_1_FSYNC INPUT FLOATING
#PE9 IMU_2_FSYNC INPUT FLOATING # can I have the same pin for both? (nope)

# interrupt pins (checked against pin diagram)
PF2 IMU_1_DRDY INPUT PULLDOWN 
PA10 IMU_2_DRDY INPUT PULLDOWN
PG5 BARO_INT INPUT PULLDOWN
# no spare inturrupt



# LSE crystal, unused
PC14 LSE1 INPUT FLOATING
PC15 LSE2 INPUT FLOATING

# HWID pins, unused
PA4 HWID_DAC1 INPUT FLOATING
#PF4 HW_VER_SENS INPUT FLOATING (I don't know where this pin is...)
#PF5 HW_REV_SENS INPUT FLOATING (same with this one)
PG0 HWID_DAC1 INPUT FLOATING

# no security module on this one

# I2C buses

# I2C1, EXT_GPS_I2C
PB8 I2C1_SCL I2C1
PB9 I2C1_SDA I2C1

# I2C2 on aviator expansion
PF1 I2C2_SCL I2C2
PF0 I2C2_SDA I2C2

# I2C3, Battery monitor
PA8 I2C3_SCL I2C3
PH8 I2C3_SDA I2C3

# I2C4, BMP388 BARO (0x76h) AND ICP-20100 BARO (0x63h) AND BMM150 MAGNETOMETER
PF14 I2C4_SCL I2C4
PF15 I2C4_SDA I2C4

# order of I2C buses
I2C_ORDER I2C4 I2C3 I2C1 I2C2

define HAL_I2C_INTERNAL_MASK 1

# GPIOs
#PE3 EXC_GPIO_25 INPUT FLOATING GPIO(110)
# PE4 EXC_GPIO_26 INPUT FLOATING GPIO(111)

# allow to have have a dedicated safety switch pin
# on PE4 (I don't know where this is on either diagram)
#PE4 SAFETY_IN INPUT PULLDOWN
define HAL_HAVE_SAFETY_SWITCH 0
define BOARD_SAFETY_ENABLE_DEFAULT 0

# start peripheral power off, then enable after init
# this prevents a problem with radios that use RTS for
# bootloader hold
#PF12 nVDD_5V_HIPOWER_EN OUTPUT HIGH
#PG4  nVDD_5V_PERIPH_EN OUTPUT HIGH

#PG5  VDD_5V_RC_EN OUTPUT HIGH
#PG6  VDD_5V_WIFI_EN OUTPUT HIGH
PC13  VDD_3V3_SD_CARD_EN OUTPUT HIGH # should this be PG11?

# UARTs

# USART1 is EXT_GPS (checked against pin diagram)
PB7 USART1_RX USART1 NODMA
PB6 USART1_TX USART1

# USART3, UART_2W_DEBUG (checked against pin diagram)
PD9 USART3_RX USART3 NODMA
PD8 USART3_TX USART3

# UART5 Telem 2, MSS_UART_4W (need to check still)
PD2 UART5_RX UART5
C12 UART5_TX UART5
PC8 UART5_RTS UART5
PC9 UART5_CTS UART5

# USART6, spektrum
PC7 USART6_RX USART6 NODMA GPIO(74)
PC6 USART6_TX USART6

# RC input. Support all serial protocols on both PPM and spektrum (not on this version)
# ports. PPM protocol also supported on the PPM port
PI5 TIM8_CH1 TIM8 RCININT PULLDOWN LOW

# setup for spektrum satellite bind
define HAL_GPIO_SPEKTRUM_RC 74
PH2 SPEKTRUM_PWR OUTPUT HIGH GPIO(73)
define HAL_GPIO_SPEKTRUM_PWR 73
define HAL_SPEKTRUM_PWR_ENABLED 1

# setup for RCIN on USUART6, will auto-baud for 100000 and 115200 and
# auto-switch inversion as needed
define DEFAULT_SERIAL6_PROTOCOL 23
define DEFAULT_SERIAL6_BAUD 115200

# UART7 Telem 1, TELEM_UART_4W (checked against pin diagram and chip pin assignments)
PF6 UART7_RX UART7
PE8 UART7_TX UART7
PF8 UART7_RTS UART7
PE10 UART7_CTS UART7

# PWM AUX channels
# for whatever reason ChibiOS doesn't like using timer 12 with dma (all the other boards that use ch12 have this setup)
PI0  TIM5_CH4  TIM5  PWM(1)
PH12 TIM5_CH3  TIM5  PWM(2)
PH11 TIM5_CH2  TIM5  PWM(3)
PH10 TIM5_CH1  TIM5  PWM(4)
PD13 TIM4_CH2  TIM4  PWM(5)
PD14 TIM4_CH3  TIM4  PWM(6)
PH6  TIM12_CH1 TIM12 PWM(7) NODMA
PH9  TIM12_CH2 TIM12 PWM(8) NODMA

define HAL_USE_ADC FALSE
define HAL_DISABLE_ADC_DRIVER TRUE

# INA231 battery monitor
define HAL_BATTMON_INA2XX_BUS 1
define HAL_BATTMON_INA2XX_ADDR 0
define HAL_BATT_MONITOR_DEFAULT 21

# on some units a LTC2946 is used (copied from fc-v1)
define HAL_BATTMON_LTC2946_BUS 1
define HAL_BATTMON_LTC2946_ADDR 0x6a

PB1 VDD_5V_SENS ADC1 SCALE(2) # ADC pin 10 (I'll need to build a check these) TODO
#PC3 SCALED_V3V3 ADC3 SCALE(2) # TODO: get this to work
PH3 BATT_VOLTAGE_SENS ADC3 SCALE(1) # again, need to check this one
PH4 USB_SENSE ADC3 SCALE(1) # need to check this

#define ANALOG_VCC_5V_PIN 10 # ???

# CAN bus
PD0 CAN1_RX CAN1
PD1 CAN1_TX CAN1
#PD15 GPIO_CAN1_SILENT OUPUT PUSHPULL SPEED_LOW LOW # got this from PX4 setup
PD15 GPIO_CAN1_SILENT OUTPUT PUSHPULL SPEED_LOW LOW

# SPI device table, two imus + ramtron
SPIDEV imu1       SPI1 DEVID1  ICM42688_A_CS  MODE3  2*MHZ  8*MHZ
SPIDEV imu2       SPI2 DEVID1  ICM42688_B_CS  MODE3  2*MHZ  8*MHZ
SPIDEV ramtron        SPI5 DEVID1  FRAM_CS        MODE3  8*MHZ  8*MHZ


# IMU1
#IMU Invensense SPI:imu1 ROTATION_YAW_180
#IMU1 Invensensev3 SPI:imu1 ROTATION_YAW_180
IMU Invensensev3 SPI:imu1 ROTATION_YAW_180

# IMU2
#IMU Invensense SPI:imu2 ROTATION_YAW_180
IMU Invensensev3 SPI:imu2 ROTATION_YAW_180

define HAL_DEFAULT_INS_FAST_SAMPLE 3

# baros
BARO BMP388 I2C:0:0x76
BARO ICP201XX I2C:0:0x63

# compass
define AP_COMPASS_BMM150_ENABLED 1
COMPASS BMM150 I2C:0:0x10 false ROTATION_NONE

# microSD support on SDMMC2
PB14  SDMMC2_D0 SDMMC2
PB15 SDMMC2_D1 SDMMC2
PG11 SDMMC2_D2 SDMMC2
PB4  SDMMC2_D3 SDMMC2
PD6  SDMMC2_CK SDMMC2
PD7  SDMMC2_CMD SDMMC2

define FATFS_HAL_DEVICE SDCD2
define HAL_OS_FATFS_IO 1

# RGB LED
PE3 LED_RED OUTPUT OPENDRAIN GPIO(93)
PE4 LED_GREEN OUTPUT OPENDRAIN GPIO(94)
PE5 LED_BLUE OUTPUT OPENDRAIN GPIO(95)

define HAL_GPIO_A_LED_PIN 93
define HAL_GPIO_B_LED_PIN 94
define HAL_GPIO_C_LED_PIN 95
define HAL_GPIO_LED_ON 0 # open drain configuration

define HAL_HAVE_PIXRACER_LED

# enable RAMTROM parameter storage
define HAL_STORAGE_SIZE 32768
define HAL_WITH_RAMTRON 1

define HAL_PROBE_EXTERNAL_I2C_COMPASSES
define HAL_COMPASS_AUTO_ROT_DEFAULT 2

DMA_PRIORITY SDMMC* ADC* SPI* TIM* UART*